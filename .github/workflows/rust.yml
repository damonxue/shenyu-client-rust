# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: ShenYu Client Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    strategy:
      matrix:
        target: [
          x86_64-pc-windows-gnu,
          i686-pc-windows-gnu,
          aarch64-pc-windows-gnu,
          x86_64-unknown-linux-gnu,
          aarch64-unknown-linux-gnu,
          arm-unknown-linux-gnueabihf,
          x86_64-apple-darwin,
          aarch64-apple-darwin
        ]
        os: [ windows-latest, ubuntu-20.04, macos-12 ]
        channel: [ stable, nightly-2024-08-02 ]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64
            channel: stable
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64
            channel: nightly-2024-08-02
          - os: windows-latest
            target: i686-pc-windows-msvc
            channel: stable
          - os: windows-latest
            target: i686-pc-windows-msvc
            channel: nightly-2024-08-02
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            code-target: win32-arm64
            channel: stable
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            code-target: win32-arm64
            channel: nightly-2024-08-02
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64
            container: rockylinux:8
            channel: stable
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64
            container: rockylinux:8
            channel: nightly-2024-08-02
          - os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64
            channel: stable
          - os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64
            channel: nightly-2024-08-02
          - os: ubuntu-20.04
            target: arm-unknown-linux-gnueabihf
            code-target: linux-armhf
            channel: stable
          - os: ubuntu-20.04
            target: arm-unknown-linux-gnueabihf
            code-target: linux-armhf
            channel: nightly-2024-08-02
          - os: macos-12
            target: x86_64-apple-darwin
            code-target: darwin-x64
            channel: stable
          - os: macos-12
            target: x86_64-apple-darwin
            code-target: darwin-x64
            channel: nightly-2024-08-02
          - os: macos-12
            target: aarch64-apple-darwin
            code-target: darwin-arm64
            channel: stable
          - os: macos-12
            target: aarch64-apple-darwin
            code-target: darwin-arm64
            channel: nightly-2024-08-02
    name: ${{ matrix.os }}-${{ matrix.target }}-test
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.target == 'i686-pc-windows-gnu' && format('{0}-i686-pc-windows-gnu', matrix.channel) || matrix.channel }}
          target: ${{ matrix.target }}
          override: true
          components: rustfmt

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Start shenyu admin on Unix
        if: ${{ !contains(matrix.os, 'windows') }}
        shell: bash
        run: sh .github/workflows/shenyu.sh
      - name: Build shenyu admin on Windows
        if: ${{ contains(matrix.os, 'windows') }}
        run: |
          .github/workflows/shenyu.bat
      - name: Start shenyu admin on Windows
        if: ${{ contains(matrix.os, 'windows') }}
        run: |
          cd shenyu\shenyu-2.6.1\shenyu-dist\shenyu-admin-dist\target
          powershell -Command "Expand-Archive -Path 'shenyu-admin-admin-bin.zip' -DestinationPath '.\shenyu-admin-admin-bin'"
          cd shenyu-admin-admin-bin\shenyu-admin-admin-bin\bin
          Start-Process -FilePath "cmd.exe" -ArgumentList "/b /c .\start.bat" -WindowStyle Hidden

      - name: Update apt repositories
        if: matrix.target == 'aarch64-unknown-linux-gnu' || matrix.target == 'arm-unknown-linux-gnueabihf'
        run: sudo apt-get update

      - name: Install AArch64 target toolchain
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get install gcc-aarch64-linux-gnu

      - name: Install ARM target toolchain
        if: matrix.target == 'arm-unknown-linux-gnueabihf'
        run: sudo apt-get install gcc-arm-linux-gnueabihf

      - name: Run tests on Unix
        if: ${{ !contains(matrix.os, 'windows') }}
        env:
          CHANNEL: ${{ matrix.channel }}
          CROSS: ${{ !startsWith(matrix.target, 'x86_64') && contains(matrix.target, 'linux') && '1' || '0' }}
          TARGET: ${{ matrix.target }}
          OS: ${{ matrix.os }}
          PROJECT_DIR: ${{ github.workspace }}
        shell: bash
        run: sh .github/workflows/ci.sh

      - name: Run tests on Windows
        if: ${{ contains(matrix.os, 'windows') }}
        env:
          CHANNEL: ${{ matrix.channel }}
          CROSS: ${{ !startsWith(matrix.target, 'x86_64') && contains(matrix.target, 'linux') && '1' || '0' }}
          TARGET: ${{ matrix.target }}
          OS: ${{ matrix.os }}
          PROJECT_DIR: ${{ github.workspace }}
        shell: msys2 {0}
        run: .github/workflows/ci.bat

      - name: Stop shenyu admin on Unix
        if: ${{ !contains(matrix.os, 'windows') }}
        run: |
          cd ~/shenyu/shenyu-dist/shenyu-admin-dist/target/apache-shenyu-*/bin
          sh ./stop.sh
  #      - name: Stop shenyu admin on Windows
  #        if: ${{ contains(matrix.os, 'windows') }}
  #        run:  |
  #          cd %USERPROFILE%
  #          cd shenyu\shenyu-dist\shenyu-admin-dist\target\shenyu-admin\bin
  #          .\stop.bat

